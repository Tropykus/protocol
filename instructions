load = async () => {
    [dep, alice, bob, eve] = await ethers.getSigners();
    comptroller = await ethers.getContractAt('ComptrollerG6', Comptroller, dep);
    rif = await ethers.getContractAt('StandardToken', RIF, dep);
    doc = await ethers.getContractAt('StandardToken', DOC, dep);
    xusd = await ethers.getContractAt('StandardToken', XUSD, dep);
    usdt = await ethers.getContractAt('StandardToken', USDT, dep);
    crif = await ethers.getContractAt('CErc20Immutable', kRIF, dep);
    cdoc = await ethers.getContractAt('CErc20Immutable', kDOC, dep);
    cxusd = await ethers.getContractAt('CRDOC', kXUSD, dep);
    cusdt = await ethers.getContractAt('CErc20Immutable', kUSDT, dep);
    crbtc = await ethers.getContractAt('CRBTC', kRBTC, dep);
    csat = await ethers.getContractAt('CRBTC', kSAT, dep);
    csatCompanion = await ethers.getContractAt('CRBTCCompanion', SATcompanion, dep);
    priceOracleProxy = await ethers.getContractAt('PriceOracleProxy', PriceOracleProxy, dep);
    rbtcOracle = await ethers.getContractAt('MockPriceProviderMoC', RBTCoracle, dep);
    mkts = await comptroller.getAllMarkets();
    users = [dep, alice, bob, eve];
}

load();
