{
  "address": "0x09635F643e140090A9A8Dcd712eD6285858ceBef",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_owners",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_required",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "transactionId",
          "type": "uint256"
        }
      ],
      "name": "Confirmation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "transactionId",
          "type": "uint256"
        }
      ],
      "name": "Execution",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "transactionId",
          "type": "uint256"
        }
      ],
      "name": "ExecutionFailure",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnerAddition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnerRemoval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "required",
          "type": "uint256"
        }
      ],
      "name": "RequirementChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "transactionId",
          "type": "uint256"
        }
      ],
      "name": "Revocation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "transactionId",
          "type": "uint256"
        }
      ],
      "name": "Submission",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MAX_OWNER_COUNT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "addOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_required",
          "type": "uint256"
        }
      ],
      "name": "changeRequirement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "transactionId",
          "type": "uint256"
        }
      ],
      "name": "confirmTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "confirmations",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "transactionId",
          "type": "uint256"
        }
      ],
      "name": "executeTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "transactionId",
          "type": "uint256"
        }
      ],
      "name": "getConfirmationCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "transactionId",
          "type": "uint256"
        }
      ],
      "name": "getConfirmations",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "_confirmations",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwners",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "pending",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "name": "getTransactionCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "to",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "pending",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "name": "getTransactionIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "_transactionIds",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "transactionId",
          "type": "uint256"
        }
      ],
      "name": "isConfirmed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "result",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "owners",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "removeOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "replaceOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "required",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "transactionId",
          "type": "uint256"
        }
      ],
      "name": "revokeConfirmation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "destination",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "submitTransaction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "transactionId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transactionCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "transactions",
      "outputs": [
        {
          "internalType": "address",
          "name": "destination",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x4d7f5b610cc4bb073bb5d2d8bc57f4f401c60f77c8d909573f2d0ba3e56b3075",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x09635F643e140090A9A8Dcd712eD6285858ceBef",
    "transactionIndex": 0,
    "gasUsed": "1785146",
    "logsBloom": "0x
    "blockHash": "0xfe44ea502149c31528f74a8ec5317bcd8a779adf51d04b0c1cc10db14bd9f3e8",
    "transactionHash": "0x4d7f5b610cc4bb073bb5d2d8bc57f4f401c60f77c8d909573f2d0ba3e56b3075",
    "logs": [],
    "blockNumber": 28,
    "cumulativeGasUsed": "1785146",
    "status": 1,
    "byzantium": true
  },
  "args": [
    [
      "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"
    ],
    1
  ],
  "solcInputHash": "eec293f42f2aab5bd7ef36a794d2c589",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_required\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"transactionId\",\"type\":\"uint256\"}],\"name\":\"Confirmation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"transactionId\",\"type\":\"uint256\"}],\"name\":\"Execution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"transactionId\",\"type\":\"uint256\"}],\"name\":\"ExecutionFailure\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnerAddition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnerRemoval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"}],\"name\":\"RequirementChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"transactionId\",\"type\":\"uint256\"}],\"name\":\"Revocation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"transactionId\",\"type\":\"uint256\"}],\"name\":\"Submission\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MAX_OWNER_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"addOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_required\",\"type\":\"uint256\"}],\"name\":\"changeRequirement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"transactionId\",\"type\":\"uint256\"}],\"name\":\"confirmTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"confirmations\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"transactionId\",\"type\":\"uint256\"}],\"name\":\"executeTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"transactionId\",\"type\":\"uint256\"}],\"name\":\"getConfirmationCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"transactionId\",\"type\":\"uint256\"}],\"name\":\"getConfirmations\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"_confirmations\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"pending\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"name\":\"getTransactionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"pending\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"name\":\"getTransactionIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_transactionIds\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"transactionId\",\"type\":\"uint256\"}],\"name\":\"isConfirmed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"owners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"removeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"replaceOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"required\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"transactionId\",\"type\":\"uint256\"}],\"name\":\"revokeConfirmation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"submitTransaction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"transactionId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transactionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transactions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Stefan George - <stefan.george@consensys.net>\",\"kind\":\"dev\",\"methods\":{\"addOwner(address)\":{\"details\":\"Allows to add a new owner. Transaction has to be sent by wallet.\",\"params\":{\"owner\":\"Address of new owner.\"}},\"changeRequirement(uint256)\":{\"details\":\"Allows to change the number of required confirmations. Transaction has to be sent by wallet.\",\"params\":{\"_required\":\"Number of required confirmations.\"}},\"confirmTransaction(uint256)\":{\"details\":\"Allows an owner to confirm a transaction.\",\"params\":{\"transactionId\":\"Transaction ID.\"}},\"constructor\":{\"details\":\"Contract constructor sets initial owners and required number of confirmations.\",\"params\":{\"_owners\":\"List of initial owners.\",\"_required\":\"Number of required confirmations.\"}},\"executeTransaction(uint256)\":{\"details\":\"Allows anyone to execute a confirmed transaction.\",\"params\":{\"transactionId\":\"Transaction ID.\"}},\"getConfirmationCount(uint256)\":{\"details\":\"Returns number of confirmations of a transaction.\",\"params\":{\"transactionId\":\"Transaction ID.\"},\"returns\":{\"count\":\"Number of confirmations.\"}},\"getConfirmations(uint256)\":{\"details\":\"Returns array with owner addresses, which confirmed transaction.\",\"params\":{\"transactionId\":\"Transaction ID.\"},\"returns\":{\"_confirmations\":\"Returns array of owner addresses.\"}},\"getOwners()\":{\"details\":\"Returns list of owners.\",\"returns\":{\"_0\":\"List of owner addresses.\"}},\"getTransactionCount(bool,bool)\":{\"details\":\"Returns total number of transactions after filers are applied.\",\"params\":{\"executed\":\"Include executed transactions.\",\"pending\":\"Include pending transactions.\"},\"returns\":{\"count\":\"Total number of transactions after filters are applied.\"}},\"getTransactionIds(uint256,uint256,bool,bool)\":{\"details\":\"Returns list of transaction IDs in defined range.\",\"params\":{\"executed\":\"Include executed transactions.\",\"from\":\"Index start position of transaction array.\",\"pending\":\"Include pending transactions.\",\"to\":\"Index end position of transaction array.\"},\"returns\":{\"_transactionIds\":\"Returns array of transaction IDs.\"}},\"isConfirmed(uint256)\":{\"details\":\"Returns the confirmation status of a transaction.\",\"params\":{\"transactionId\":\"Transaction ID.\"},\"returns\":{\"result\":\"Confirmation status.\"}},\"removeOwner(address)\":{\"details\":\"Allows to remove an owner. Transaction has to be sent by wallet.\",\"params\":{\"owner\":\"Address of owner.\"}},\"replaceOwner(address,address)\":{\"details\":\"Allows to replace an owner with a new owner. Transaction has to be sent by wallet.\",\"params\":{\"newOwner\":\"Address of new owner.\",\"owner\":\"Address of owner to be replaced.\"}},\"revokeConfirmation(uint256)\":{\"details\":\"Allows an owner to revoke a confirmation for a transaction.\",\"params\":{\"transactionId\":\"Transaction ID.\"}},\"submitTransaction(address,uint256,bytes)\":{\"details\":\"Allows an owner to submit and confirm a transaction.\",\"params\":{\"data\":\"Transaction data payload.\",\"destination\":\"Transaction target address.\",\"value\":\"Transaction ether value.\"},\"returns\":{\"transactionId\":\"Returns transaction ID.\"}}},\"title\":\"Multisignature wallet - Allows multiple parties to agree on transactions before execution.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MultiSigWallet.sol\":\"MultiSigWallet\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MultiSigWallet.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.6;\\n\\n/// @title Multisignature wallet - Allows multiple parties to agree on transactions before execution.\\n/// @author Stefan George - <stefan.george@consensys.net>\\ncontract MultiSigWallet {\\n    /*\\n     *  Events\\n     */\\n    event Confirmation(address indexed sender, uint256 indexed transactionId);\\n    event Revocation(address indexed sender, uint256 indexed transactionId);\\n    event Submission(uint256 indexed transactionId);\\n    event Execution(uint256 indexed transactionId);\\n    event ExecutionFailure(uint256 indexed transactionId);\\n    event Deposit(address indexed sender, uint256 value);\\n    event OwnerAddition(address indexed owner);\\n    event OwnerRemoval(address indexed owner);\\n    event RequirementChange(uint256 required);\\n\\n    /*\\n     *  views\\n     */\\n    uint256 public constant MAX_OWNER_COUNT = 50;\\n\\n    /*\\n     *  Storage\\n     */\\n    mapping(uint256 => Transaction) public transactions;\\n    mapping(uint256 => mapping(address => bool)) public confirmations;\\n    mapping(address => bool) public isOwner;\\n    address[] public owners;\\n    uint256 public required;\\n    uint256 public transactionCount;\\n\\n    struct Transaction {\\n        address destination;\\n        uint256 value;\\n        bytes data;\\n        bool executed;\\n    }\\n\\n    /*\\n     *  Modifiers\\n     */\\n    modifier onlyWallet() {\\n        require(msg.sender == address(this), \\\"Only wallet allowed\\\");\\n        _;\\n    }\\n\\n    modifier ownerDoesNotExist(address owner) {\\n        require(!isOwner[owner], \\\"The owner already exists\\\");\\n        _;\\n    }\\n\\n    modifier ownerExists(address owner) {\\n        require(isOwner[owner], \\\"The owner does not exist\\\");\\n        _;\\n    }\\n\\n    modifier transactionExists(uint256 transactionId) {\\n        require(\\n            transactions[transactionId].destination != address(0),\\n            \\\"Transaction does not exist\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier confirmed(uint256 transactionId, address owner) {\\n        require(\\n            confirmations[transactionId][owner],\\n            \\\"Transaction is not confirmed by owner\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier notConfirmed(uint256 transactionId, address owner) {\\n        require(\\n            !confirmations[transactionId][owner],\\n            \\\"Transaction is already confirmed by owner\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier notExecuted(uint256 transactionId) {\\n        require(\\n            !transactions[transactionId].executed,\\n            \\\"Transaction was already executed\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier notNull(address _address) {\\n        require(_address != address(0), \\\"Address cannot be empty\\\");\\n        _;\\n    }\\n\\n    modifier validRequirement(uint256 ownerCount, uint256 _required) {\\n        // solium-disable-next-line max-len\\n        require(\\n            ownerCount <= MAX_OWNER_COUNT &&\\n                _required <= ownerCount &&\\n                _required != 0 &&\\n                ownerCount != 0,\\n            \\\"Required value is invalid for the current owners count\\\"\\n        );\\n        _;\\n    }\\n\\n    /// @dev Fallback function allows to deposit ether.\\n    fallback() external payable {\\n        if (msg.value > 0) emit Deposit(msg.sender, msg.value);\\n    }\\n\\n    receive() external payable {\\n        if (msg.value > 0) emit Deposit(msg.sender, msg.value);\\n    }\\n\\n    /*\\n     * Public functions\\n     */\\n    /// @dev Contract constructor sets initial owners and required number of confirmations.\\n    /// @param _owners List of initial owners.\\n    /// @param _required Number of required confirmations.\\n    constructor(address[] memory _owners, uint256 _required)\\n        validRequirement(_owners.length, _required)\\n    {\\n        for (uint256 i = 0; i < _owners.length; i++) {\\n            require(\\n                !isOwner[_owners[i]] && _owners[i] != address(0),\\n                \\\"Owners addresses are invalid\\\"\\n            );\\n            isOwner[_owners[i]] = true;\\n        }\\n        owners = _owners;\\n        required = _required;\\n    }\\n\\n    /// @dev Allows to add a new owner. Transaction has to be sent by wallet.\\n    /// @param owner Address of new owner.\\n    function addOwner(address owner)\\n        public\\n        onlyWallet\\n        ownerDoesNotExist(owner)\\n        notNull(owner)\\n        validRequirement(owners.length + 1, required)\\n    {\\n        isOwner[owner] = true;\\n        owners.push(owner);\\n        emit OwnerAddition(owner);\\n    }\\n\\n    /// @dev Allows to remove an owner. Transaction has to be sent by wallet.\\n    /// @param owner Address of owner.\\n    function removeOwner(address owner) public onlyWallet ownerExists(owner) {\\n        isOwner[owner] = false;\\n        address[] memory oldOwners = owners;\\n        owners = new address[](0);\\n        for (uint256 i = 0; i < oldOwners.length; i++) {\\n            if (oldOwners[i] == owner) continue;\\n            owners.push(owners[i]);\\n        }\\n        if (required > owners.length) changeRequirement(owners.length);\\n        emit OwnerRemoval(owner);\\n    }\\n\\n    /// @dev Allows to replace an owner with a new owner. Transaction has to be sent by wallet.\\n    /// @param owner Address of owner to be replaced.\\n    /// @param newOwner Address of new owner.\\n    function replaceOwner(address owner, address newOwner)\\n        public\\n        onlyWallet\\n        ownerExists(owner)\\n        ownerDoesNotExist(newOwner)\\n    {\\n        for (uint256 i = 0; i < owners.length; i++)\\n            if (owners[i] == owner) {\\n                owners[i] = newOwner;\\n                break;\\n            }\\n        isOwner[owner] = false;\\n        isOwner[newOwner] = true;\\n        emit OwnerRemoval(owner);\\n        emit OwnerAddition(newOwner);\\n    }\\n\\n    /// @dev Allows to change the number of required confirmations. Transaction has to be sent by wallet.\\n    /// @param _required Number of required confirmations.\\n    function changeRequirement(uint256 _required)\\n        public\\n        onlyWallet\\n        validRequirement(owners.length, _required)\\n    {\\n        required = _required;\\n        emit RequirementChange(_required);\\n    }\\n\\n    /// @dev Allows an owner to submit and confirm a transaction.\\n    /// @param destination Transaction target address.\\n    /// @param value Transaction ether value.\\n    /// @param data Transaction data payload.\\n    /// @return transactionId Returns transaction ID.\\n    function submitTransaction(\\n        address destination,\\n        uint256 value,\\n        bytes memory data\\n    ) public returns (uint256 transactionId) {\\n        transactionId = addTransaction(destination, value, data);\\n        confirmTransaction(transactionId);\\n    }\\n\\n    /// @dev Allows an owner to confirm a transaction.\\n    /// @param transactionId Transaction ID.\\n    function confirmTransaction(uint256 transactionId)\\n        public\\n        ownerExists(msg.sender)\\n        transactionExists(transactionId)\\n        notConfirmed(transactionId, msg.sender)\\n    {\\n        confirmations[transactionId][msg.sender] = true;\\n        emit Confirmation(msg.sender, transactionId);\\n        executeTransaction(transactionId);\\n    }\\n\\n    /// @dev Allows an owner to revoke a confirmation for a transaction.\\n    /// @param transactionId Transaction ID.\\n    function revokeConfirmation(uint256 transactionId)\\n        public\\n        ownerExists(msg.sender)\\n        confirmed(transactionId, msg.sender)\\n        notExecuted(transactionId)\\n    {\\n        confirmations[transactionId][msg.sender] = false;\\n        emit Revocation(msg.sender, transactionId);\\n    }\\n\\n    /// @dev Allows anyone to execute a confirmed transaction.\\n    /// @param transactionId Transaction ID.\\n    function executeTransaction(uint256 transactionId)\\n        public\\n        ownerExists(msg.sender)\\n        confirmed(transactionId, msg.sender)\\n        notExecuted(transactionId)\\n    {\\n        if (isConfirmed(transactionId)) {\\n            Transaction storage txn = transactions[transactionId];\\n            txn.executed = true;\\n            if (\\n                external_call(\\n                    txn.destination,\\n                    txn.value,\\n                    txn.data.length,\\n                    txn.data\\n                )\\n            ) emit Execution(transactionId);\\n            else {\\n                emit ExecutionFailure(transactionId);\\n                txn.executed = false;\\n            }\\n        }\\n    }\\n\\n    // call has been separated into its own function in order to take advantage\\n    // of the Solidity's code generator to produce a loop that copies tx.data into memory.\\n    function external_call(\\n        address destination,\\n        uint256 value,\\n        uint256 dataLength,\\n        bytes memory data\\n    ) internal returns (bool) {\\n        bool result;\\n        // solium-disable-next-line security/no-inline-assembly\\n        assembly {\\n            let x := mload(0x40) // \\\"Allocate\\\" memory for output (0x40 is where \\\"free memory\\\" pointer is stored by convention)\\n            let d := add(data, 32) // First 32 bytes are the padded length of data, so exclude that\\n            result := call(\\n                sub(gas(), 34710), // 34710 is the value that solidity is currently emitting\\n                // It includes callGas (700) + callVeryLow (3, to pay for SUB) + callValueTransferGas (9000) +\\n                // callNewAccountGas (25000, in case the destination address does not exist and needs creating)\\n                destination,\\n                value,\\n                d,\\n                dataLength, // Size of the input (in bytes) - this is what fixes the padding problem\\n                x,\\n                0 // Output is ignored, therefore the output size is zero\\n            )\\n        }\\n        return result;\\n    }\\n\\n    /// @dev Returns the confirmation status of a transaction.\\n    /// @param transactionId Transaction ID.\\n    /// @return result Confirmation status.\\n    function isConfirmed(uint256 transactionId) public view returns (bool result) {\\n        uint256 count = 0;\\n        for (uint256 i = 0; i < owners.length; i++) {\\n            if (confirmations[transactionId][owners[i]]) count += 1;\\n            if (count == required) return true;\\n        }\\n    }\\n\\n    /*\\n     * Internal functions\\n     */\\n    /// @dev Adds a new transaction to the transaction mapping, if transaction does not exist yet.\\n    /// @param destination Transaction target address.\\n    /// @param value Transaction ether value.\\n    /// @param data Transaction data payload.\\n    /// @return transactionId Returns transaction ID.\\n    function addTransaction(\\n        address destination,\\n        uint256 value,\\n        bytes memory data\\n    ) internal notNull(destination) returns (uint256 transactionId) {\\n        transactionId = transactionCount;\\n        transactions[transactionId] = Transaction({\\n            destination: destination,\\n            value: value,\\n            data: data,\\n            executed: false\\n        });\\n        transactionCount += 1;\\n        emit Submission(transactionId);\\n    }\\n\\n    /*\\n     * Web3 call functions\\n     */\\n    /// @dev Returns number of confirmations of a transaction.\\n    /// @param transactionId Transaction ID.\\n    /// @return count Number of confirmations.\\n    function getConfirmationCount(uint256 transactionId)\\n        public\\n        view\\n        returns (uint256 count)\\n    {\\n        for (uint256 i = 0; i < owners.length; i++) {\\n            if (confirmations[transactionId][owners[i]]) {\\n                count += 1;\\n            }\\n        }\\n    }\\n\\n    /// @dev Returns total number of transactions after filers are applied.\\n    /// @param pending Include pending transactions.\\n    /// @param executed Include executed transactions.\\n    /// @return count Total number of transactions after filters are applied.\\n    function getTransactionCount(bool pending, bool executed)\\n        public\\n        view\\n        returns (uint256 count)\\n    {\\n        for (uint256 i = 0; i < transactionCount; i++) {\\n            if (\\n                (pending && !transactions[i].executed) ||\\n                (executed && transactions[i].executed)\\n            ) {\\n                count += 1;\\n            }\\n        }\\n    }\\n\\n    /// @dev Returns list of owners.\\n    /// @return List of owner addresses.\\n    function getOwners() public view returns (address[] memory) {\\n        return owners;\\n    }\\n\\n    /// @dev Returns array with owner addresses, which confirmed transaction.\\n    /// @param transactionId Transaction ID.\\n    /// @return _confirmations Returns array of owner addresses.\\n    function getConfirmations(uint256 transactionId)\\n        public\\n        view\\n        returns (address[] memory _confirmations)\\n    {\\n        address[] memory confirmationsTemp = new address[](owners.length);\\n        uint256 count = 0;\\n        uint256 i;\\n        for (i = 0; i < owners.length; i++)\\n            if (confirmations[transactionId][owners[i]]) {\\n                confirmationsTemp[count] = owners[i];\\n                count += 1;\\n            }\\n        _confirmations = new address[](count);\\n        for (i = 0; i < count; i++) _confirmations[i] = confirmationsTemp[i];\\n    }\\n\\n    /// @dev Returns list of transaction IDs in defined range.\\n    /// @param from Index start position of transaction array.\\n    /// @param to Index end position of transaction array.\\n    /// @param pending Include pending transactions.\\n    /// @param executed Include executed transactions.\\n    /// @return _transactionIds Returns array of transaction IDs.\\n    function getTransactionIds(\\n        uint256 from,\\n        uint256 to,\\n        bool pending,\\n        bool executed\\n    ) public view returns (uint256[] memory _transactionIds) {\\n        uint256[] memory transactionIdsTemp = new uint256[](transactionCount);\\n        uint256 count = 0;\\n        uint256 i;\\n        for (i = 0; i < transactionCount; i++)\\n            if (\\n                (pending && !transactions[i].executed) ||\\n                (executed && transactions[i].executed)\\n            ) {\\n                transactionIdsTemp[count] = i;\\n                count += 1;\\n            }\\n        _transactionIds = new uint256[](to - from);\\n        for (i = from; i < to; i++)\\n            _transactionIds[i - from] = transactionIdsTemp[i];\\n    }\\n}\\n\",\"keccak256\":\"0x0a7eb6c2c5e72c65685ccd1c5157b67fb26aaa21cf6b427f77334759c8d06402\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200219b3803806200219b8339810160408190526200003491620002d4565b81518160328211158015620000495750818111155b80156200005557508015155b80156200006157508115155b620000d95760405162461bcd60e51b815260206004820152603660248201527f52657175697265642076616c756520697320696e76616c696420666f7220746860448201527f652063757272656e74206f776e65727320636f756e740000000000000000000060648201526084015b60405180910390fd5b60005b8451811015620002135760026000868381518110620000ff57620000ff620003df565b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff1615801562000163575060006001600160a01b03168582815181106200014f576200014f620003df565b60200260200101516001600160a01b031614155b620001b15760405162461bcd60e51b815260206004820152601c60248201527f4f776e657273206164647265737365732061726520696e76616c6964000000006044820152606401620000d0565b600160026000878481518110620001cc57620001cc620003df565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806200020a81620003b5565b915050620000dc565b5083516200022990600390602087019062000236565b505050600455506200040b565b8280548282559060005260206000209081019282156200028e579160200282015b828111156200028e57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000257565b506200029c929150620002a0565b5090565b5b808211156200029c5760008155600101620002a1565b80516001600160a01b0381168114620002cf57600080fd5b919050565b60008060408385031215620002e857600080fd5b82516001600160401b03808211156200030057600080fd5b818501915085601f8301126200031557600080fd5b81516020828211156200032c576200032c620003f5565b8160051b604051601f19603f83011681018181108682111715620003545762000354620003f5565b604052838152828101945085830182870184018b10156200037457600080fd5b600096505b84871015620003a2576200038d81620002b7565b86526001969096019594830194830162000379565b5097909101519698969750505050505050565b6000600019821415620003d857634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b611d80806200041b6000396000f3fe60806040526004361061012e5760003560e01c8063a0e67e2b116100ab578063c01a8c841161006f578063c01a8c8414610405578063c642747414610425578063d74f8edd14610445578063dc8452cd1461045a578063e20056e614610470578063ee22610b1461049057610172565b8063a0e67e2b14610360578063a8abe69a14610382578063b5dc40c3146103af578063b77bf600146103cf578063ba51a6df146103e557610172565b806354741525116100f257806354741525146102a25780637065cb48146102d0578063784547a7146102f05780638b51d13f146103105780639ace38c21461033057610172565b8063025e7c27146101aa578063173825d9146101e757806320ea8d86146102075780632f54bf6e146102275780633411c81c1461026757610172565b366101725734156101705760405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c906020015b60405180910390a25b005b34156101705760405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c90602001610167565b3480156101b657600080fd5b506101ca6101c5366004611a07565b6104b0565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101f357600080fd5b506101706102023660046118c4565b6104da565b34801561021357600080fd5b50610170610222366004611a07565b6106f8565b34801561023357600080fd5b506102576102423660046118c4565b60026020526000908152604090205460ff1681565b60405190151581526020016101de565b34801561027357600080fd5b50610257610282366004611a20565b600160209081526000928352604080842090915290825290205460ff1681565b3480156102ae57600080fd5b506102c26102bd3660046119dd565b610817565b6040519081526020016101de565b3480156102dc57600080fd5b506101706102eb3660046118c4565b610894565b3480156102fc57600080fd5b5061025761030b366004611a07565b610a4e565b34801561031c57600080fd5b506102c261032b366004611a07565b610aea565b34801561033c57600080fd5b5061035061034b366004611a07565b610b70565b6040516101de9493929190611a89565b34801561036c57600080fd5b50610375610c2e565b6040516101de9190611b05565b34801561038e57600080fd5b506103a261039d366004611a43565b610c90565b6040516101de9190611b52565b3480156103bb57600080fd5b506103756103ca366004611a07565b610e28565b3480156103db57600080fd5b506102c260055481565b3480156103f157600080fd5b50610170610400366004611a07565b611000565b34801561041157600080fd5b50610170610420366004611a07565b6110a3565b34801561043157600080fd5b506102c2610440366004611912565b611215565b34801561045157600080fd5b506102c2603281565b34801561046657600080fd5b506102c260045481565b34801561047c57600080fd5b5061017061048b3660046118df565b611234565b34801561049c57600080fd5b506101706104ab366004611a07565b61142b565b600381815481106104c057600080fd5b6000918252602090912001546001600160a01b0316905081565b3330146105025760405162461bcd60e51b81526004016104f990611c25565b60405180910390fd5b6001600160a01b038116600090815260026020526040902054819060ff1661053c5760405162461bcd60e51b81526004016104f990611c52565b6001600160a01b0382166000908152600260209081526040808320805460ff191690556003805482518185028101850190935280835291929091908301828280156105b057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610592575b50939450600093506105c192505050565b6040519080825280602002602001820160405280156105ea578160200160208202803683370190505b5080516105ff916003916020909101906117aa565b5060005b81518110156106a657836001600160a01b031682828151811061062857610628611d1e565b60200260200101516001600160a01b0316141561064457610694565b600380828154811061065857610658611d1e565b60009182526020808320909101548354600181018555938352912090910180546001600160a01b0319166001600160a01b039092169190911790555b8061069e81611ced565b915050610603565b5060035460045411156106bf576003546106bf90611000565b6040516001600160a01b038416907f8001553a916ef2f495d26a907cc54d96ed840d7bda71e73194bf5a9df7a76b9090600090a2505050565b3360008181526002602052604090205460ff166107275760405162461bcd60e51b81526004016104f990611c52565b60008281526001602090815260408083203380855292529091205483919060ff166107645760405162461bcd60e51b81526004016104f990611be0565b600084815260208190526040902060030154849060ff16156107c85760405162461bcd60e51b815260206004820181905260248201527f5472616e73616374696f6e2077617320616c726561647920657865637574656460448201526064016104f9565b6000858152600160209081526040808320338085529252808320805460ff191690555187927ff6a317157440607f36269043eb55f1287a5a19ba2216afeab88cd46cbcfb88e991a35050505050565b6000805b60055481101561088d57838015610844575060008181526020819052604090206003015460ff16155b806108685750828015610868575060008181526020819052604090206003015460ff165b1561087b57610878600183611c89565b91505b8061088581611ced565b91505061081b565b5092915050565b3330146108b35760405162461bcd60e51b81526004016104f990611c25565b6001600160a01b038116600090815260026020526040902054819060ff16156109195760405162461bcd60e51b8152602060048201526018602482015277546865206f776e657220616c72656164792065786973747360401b60448201526064016104f9565b816001600160a01b03811661096a5760405162461bcd60e51b8152602060048201526017602482015276416464726573732063616e6e6f7420626520656d70747960481b60448201526064016104f9565b600354610978906001611c89565b6004546032821115801561098c5750818111155b801561099757508015155b80156109a257508115155b6109be5760405162461bcd60e51b81526004016104f990611b8a565b6001600160a01b038516600081815260026020526040808220805460ff1916600190811790915560038054918201815583527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b03191684179055517ff39e6e1eb0edcf53c221607b54b00cd28f3196fed0a24994dc308b8f611b682d9190a25050505050565b600080805b600354811015610ae35760008481526001602052604081206003805491929184908110610a8257610a82611d1e565b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff1615610abd57610aba600183611c89565b91505b600454821415610ad1575060019392505050565b80610adb81611ced565b915050610a53565b5050919050565b6000805b600354811015610b6a5760008381526001602052604081206003805491929184908110610b1d57610b1d611d1e565b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff1615610b5857610b55600183611c89565b91505b80610b6281611ced565b915050610aee565b50919050565b6000602081905290815260409020805460018201546002830180546001600160a01b03909316939192610ba290611cb8565b80601f0160208091040260200160405190810160405280929190818152602001828054610bce90611cb8565b8015610c1b5780601f10610bf057610100808354040283529160200191610c1b565b820191906000526020600020905b815481529060010190602001808311610bfe57829003601f168201915b5050506003909301549192505060ff1684565b60606003805480602002602001604051908101604052809291908181526020018280548015610c8657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610c68575b5050505050905090565b6060600060055467ffffffffffffffff811115610caf57610caf611d34565b604051908082528060200260200182016040528015610cd8578160200160208202803683370190505b5090506000805b600554811015610d6f57858015610d08575060008181526020819052604090206003015460ff16155b80610d2c5750848015610d2c575060008181526020819052604090206003015460ff165b15610d5d5780838381518110610d4457610d44611d1e565b6020908102919091010152610d5a600183611c89565b91505b80610d6781611ced565b915050610cdf565b610d798888611ca1565b67ffffffffffffffff811115610d9157610d91611d34565b604051908082528060200260200182016040528015610dba578160200160208202803683370190505b5093508790505b86811015610e1d57828181518110610ddb57610ddb611d1e565b6020026020010151848983610df09190611ca1565b81518110610e0057610e00611d1e565b602090810291909101015280610e1581611ced565b915050610dc1565b505050949350505050565b60035460609060009067ffffffffffffffff811115610e4957610e49611d34565b604051908082528060200260200182016040528015610e72578160200160208202803683370190505b5090506000805b600354811015610f505760008581526001602052604081206003805491929184908110610ea857610ea8611d1e565b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff1615610f3e5760038181548110610ee857610ee8611d1e565b9060005260206000200160009054906101000a90046001600160a01b0316838381518110610f1857610f18611d1e565b6001600160a01b0390921660209283029190910190910152610f3b600183611c89565b91505b80610f4881611ced565b915050610e79565b8167ffffffffffffffff811115610f6957610f69611d34565b604051908082528060200260200182016040528015610f92578160200160208202803683370190505b509350600090505b81811015610ff857828181518110610fb457610fb4611d1e565b6020026020010151848281518110610fce57610fce611d1e565b6001600160a01b039092166020928302919091019091015280610ff081611ced565b915050610f9a565b505050919050565b33301461101f5760405162461bcd60e51b81526004016104f990611c25565b60035481603282118015906110345750818111155b801561103f57508015155b801561104a57508115155b6110665760405162461bcd60e51b81526004016104f990611b8a565b60048390556040518381527fa3f1ee9126a074d9326c682f561767f710e927faa811f7a99829d49dc421797a9060200160405180910390a1505050565b3360008181526002602052604090205460ff166110d25760405162461bcd60e51b81526004016104f990611c52565b60008281526020819052604090205482906001600160a01b03166111385760405162461bcd60e51b815260206004820152601a60248201527f5472616e73616374696f6e20646f6573206e6f7420657869737400000000000060448201526064016104f9565b60008381526001602090815260408083203380855292529091205484919060ff16156111b85760405162461bcd60e51b815260206004820152602960248201527f5472616e73616374696f6e20697320616c726561647920636f6e6669726d656460448201526810313c9037bbb732b960b91b60648201526084016104f9565b6000858152600160208181526040808420338086529252808420805460ff1916909317909255905187927f4a504a94899432a9846e1aa406dceb1bcfd538bb839071d49d1e5e23f5be30ef91a361120e8561142b565b5050505050565b6000611222848484611657565b905061122d816110a3565b9392505050565b3330146112535760405162461bcd60e51b81526004016104f990611c25565b6001600160a01b038216600090815260026020526040902054829060ff1661128d5760405162461bcd60e51b81526004016104f990611c52565b6001600160a01b038216600090815260026020526040902054829060ff16156112f35760405162461bcd60e51b8152602060048201526018602482015277546865206f776e657220616c72656164792065786973747360401b60448201526064016104f9565b60005b60035481101561139157846001600160a01b03166003828154811061131d5761131d611d1e565b6000918252602090912001546001600160a01b0316141561137f57836003828154811061134c5761134c611d1e565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550611391565b8061138981611ced565b9150506112f6565b506001600160a01b03808516600081815260026020526040808220805460ff1990811690915593871682528082208054909416600117909355915190917f8001553a916ef2f495d26a907cc54d96ed840d7bda71e73194bf5a9df7a76b9091a26040516001600160a01b038416907ff39e6e1eb0edcf53c221607b54b00cd28f3196fed0a24994dc308b8f611b682d90600090a250505050565b3360008181526002602052604090205460ff1661145a5760405162461bcd60e51b81526004016104f990611c52565b60008281526001602090815260408083203380855292529091205483919060ff166114975760405162461bcd60e51b81526004016104f990611be0565b600084815260208190526040902060030154849060ff16156114fb5760405162461bcd60e51b815260206004820181905260248201527f5472616e73616374696f6e2077617320616c726561647920657865637574656460448201526064016104f9565b61150485610a4e565b1561120e57600085815260208190526040902060038101805460ff191660019081179091558154908201546002830180546115e2936001600160a01b031692919061154e90611cb8565b905084600201805461155f90611cb8565b80601f016020809104026020016040519081016040528092919081815260200182805461158b90611cb8565b80156115d85780601f106115ad576101008083540402835291602001916115d8565b820191906000526020600020905b8154815290600101906020018083116115bb57829003601f168201915b5050505050611787565b156116175760405186907f33e13ecb54c3076d8e8bb8c2881800a4d972b792045ffae98fdf46df365fed7590600090a261164f565b60405186907f526441bb6c1aba3c9a4a6ca1d6545da9c2333c8c48343ef398eb858d72b7923690600090a260038101805460ff191690555b505050505050565b6000836001600160a01b0381166116aa5760405162461bcd60e51b8152602060048201526017602482015276416464726573732063616e6e6f7420626520656d70747960481b60448201526064016104f9565b600554604080516080810182526001600160a01b038881168252602080830189815283850189815260006060860181905287815280845295909520845181546001600160a01b0319169416939093178355516001830155925180519496509193909261171d92600285019291019061180f565b50606091909101516003909101805460ff1916911515919091179055600580546001919060009061174f908490611c89565b909155505060405182907fc0ba8fe4b176c1714197d43b9cc6bcf797a4a7461c5fe8d0ef6e184ae7601e5190600090a2509392505050565b6000806040516020840160008287838a8c6187965a03f198975050505050505050565b8280548282559060005260206000209081019282156117ff579160200282015b828111156117ff57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906117ca565b5061180b929150611883565b5090565b82805461181b90611cb8565b90600052602060002090601f01602090048101928261183d57600085556117ff565b82601f1061185657805160ff19168380011785556117ff565b828001600101855582156117ff579182015b828111156117ff578251825591602001919060010190611868565b5b8082111561180b5760008155600101611884565b80356001600160a01b03811681146118af57600080fd5b919050565b803580151581146118af57600080fd5b6000602082840312156118d657600080fd5b61122d82611898565b600080604083850312156118f257600080fd5b6118fb83611898565b915061190960208401611898565b90509250929050565b60008060006060848603121561192757600080fd5b61193084611898565b925060208401359150604084013567ffffffffffffffff8082111561195457600080fd5b818601915086601f83011261196857600080fd5b81358181111561197a5761197a611d34565b604051601f8201601f19908116603f011681019083821181831017156119a2576119a2611d34565b816040528281528960208487010111156119bb57600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b600080604083850312156119f057600080fd5b6119f9836118b4565b9150611909602084016118b4565b600060208284031215611a1957600080fd5b5035919050565b60008060408385031215611a3357600080fd5b8235915061190960208401611898565b60008060008060808587031215611a5957600080fd5b8435935060208501359250611a70604086016118b4565b9150611a7e606086016118b4565b905092959194509250565b60018060a01b038516815260006020858184015260806040840152845180608085015260005b81811015611acb5786810183015185820160a001528201611aaf565b81811115611add57600060a083870101525b50601f01601f1916830160a0019150611afc9050606083018415159052565b95945050505050565b6020808252825182820181905260009190848201906040850190845b81811015611b465783516001600160a01b031683529284019291840191600101611b21565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611b4657835183529284019291840191600101611b6e565b60208082526036908201527f52657175697265642076616c756520697320696e76616c696420666f72207468604082015275194818dd5c9c995b9d081bdddb995c9cc818dbdd5b9d60521b606082015260800190565b60208082526025908201527f5472616e73616374696f6e206973206e6f7420636f6e6669726d65642062792060408201526437bbb732b960d91b606082015260800190565b60208082526013908201527213db9b1e481dd85b1b195d08185b1b1bddd959606a1b604082015260600190565b60208082526018908201527f546865206f776e657220646f6573206e6f742065786973740000000000000000604082015260600190565b60008219821115611c9c57611c9c611d08565b500190565b600082821015611cb357611cb3611d08565b500390565b600181811c90821680611ccc57607f821691505b60208210811415610b6a57634e487b7160e01b600052602260045260246000fd5b6000600019821415611d0157611d01611d08565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212206218bf781dcbc620e8829bdebcbc6ce03bf4703a647141467643a6c8d5d3bc2364736f6c63430008060033",
  "deployedBytecode": "0x60806040526004361061012e5760003560e01c8063a0e67e2b116100ab578063c01a8c841161006f578063c01a8c8414610405578063c642747414610425578063d74f8edd14610445578063dc8452cd1461045a578063e20056e614610470578063ee22610b1461049057610172565b8063a0e67e2b14610360578063a8abe69a14610382578063b5dc40c3146103af578063b77bf600146103cf578063ba51a6df146103e557610172565b806354741525116100f257806354741525146102a25780637065cb48146102d0578063784547a7146102f05780638b51d13f146103105780639ace38c21461033057610172565b8063025e7c27146101aa578063173825d9146101e757806320ea8d86146102075780632f54bf6e146102275780633411c81c1461026757610172565b366101725734156101705760405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c906020015b60405180910390a25b005b34156101705760405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c90602001610167565b3480156101b657600080fd5b506101ca6101c5366004611a07565b6104b0565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101f357600080fd5b506101706102023660046118c4565b6104da565b34801561021357600080fd5b50610170610222366004611a07565b6106f8565b34801561023357600080fd5b506102576102423660046118c4565b60026020526000908152604090205460ff1681565b60405190151581526020016101de565b34801561027357600080fd5b50610257610282366004611a20565b600160209081526000928352604080842090915290825290205460ff1681565b3480156102ae57600080fd5b506102c26102bd3660046119dd565b610817565b6040519081526020016101de565b3480156102dc57600080fd5b506101706102eb3660046118c4565b610894565b3480156102fc57600080fd5b5061025761030b366004611a07565b610a4e565b34801561031c57600080fd5b506102c261032b366004611a07565b610aea565b34801561033c57600080fd5b5061035061034b366004611a07565b610b70565b6040516101de9493929190611a89565b34801561036c57600080fd5b50610375610c2e565b6040516101de9190611b05565b34801561038e57600080fd5b506103a261039d366004611a43565b610c90565b6040516101de9190611b52565b3480156103bb57600080fd5b506103756103ca366004611a07565b610e28565b3480156103db57600080fd5b506102c260055481565b3480156103f157600080fd5b50610170610400366004611a07565b611000565b34801561041157600080fd5b50610170610420366004611a07565b6110a3565b34801561043157600080fd5b506102c2610440366004611912565b611215565b34801561045157600080fd5b506102c2603281565b34801561046657600080fd5b506102c260045481565b34801561047c57600080fd5b5061017061048b3660046118df565b611234565b34801561049c57600080fd5b506101706104ab366004611a07565b61142b565b600381815481106104c057600080fd5b6000918252602090912001546001600160a01b0316905081565b3330146105025760405162461bcd60e51b81526004016104f990611c25565b60405180910390fd5b6001600160a01b038116600090815260026020526040902054819060ff1661053c5760405162461bcd60e51b81526004016104f990611c52565b6001600160a01b0382166000908152600260209081526040808320805460ff191690556003805482518185028101850190935280835291929091908301828280156105b057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610592575b50939450600093506105c192505050565b6040519080825280602002602001820160405280156105ea578160200160208202803683370190505b5080516105ff916003916020909101906117aa565b5060005b81518110156106a657836001600160a01b031682828151811061062857610628611d1e565b60200260200101516001600160a01b0316141561064457610694565b600380828154811061065857610658611d1e565b60009182526020808320909101548354600181018555938352912090910180546001600160a01b0319166001600160a01b039092169190911790555b8061069e81611ced565b915050610603565b5060035460045411156106bf576003546106bf90611000565b6040516001600160a01b038416907f8001553a916ef2f495d26a907cc54d96ed840d7bda71e73194bf5a9df7a76b9090600090a2505050565b3360008181526002602052604090205460ff166107275760405162461bcd60e51b81526004016104f990611c52565b60008281526001602090815260408083203380855292529091205483919060ff166107645760405162461bcd60e51b81526004016104f990611be0565b600084815260208190526040902060030154849060ff16156107c85760405162461bcd60e51b815260206004820181905260248201527f5472616e73616374696f6e2077617320616c726561647920657865637574656460448201526064016104f9565b6000858152600160209081526040808320338085529252808320805460ff191690555187927ff6a317157440607f36269043eb55f1287a5a19ba2216afeab88cd46cbcfb88e991a35050505050565b6000805b60055481101561088d57838015610844575060008181526020819052604090206003015460ff16155b806108685750828015610868575060008181526020819052604090206003015460ff165b1561087b57610878600183611c89565b91505b8061088581611ced565b91505061081b565b5092915050565b3330146108b35760405162461bcd60e51b81526004016104f990611c25565b6001600160a01b038116600090815260026020526040902054819060ff16156109195760405162461bcd60e51b8152602060048201526018602482015277546865206f776e657220616c72656164792065786973747360401b60448201526064016104f9565b816001600160a01b03811661096a5760405162461bcd60e51b8152602060048201526017602482015276416464726573732063616e6e6f7420626520656d70747960481b60448201526064016104f9565b600354610978906001611c89565b6004546032821115801561098c5750818111155b801561099757508015155b80156109a257508115155b6109be5760405162461bcd60e51b81526004016104f990611b8a565b6001600160a01b038516600081815260026020526040808220805460ff1916600190811790915560038054918201815583527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b03191684179055517ff39e6e1eb0edcf53c221607b54b00cd28f3196fed0a24994dc308b8f611b682d9190a25050505050565b600080805b600354811015610ae35760008481526001602052604081206003805491929184908110610a8257610a82611d1e565b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff1615610abd57610aba600183611c89565b91505b600454821415610ad1575060019392505050565b80610adb81611ced565b915050610a53565b5050919050565b6000805b600354811015610b6a5760008381526001602052604081206003805491929184908110610b1d57610b1d611d1e565b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff1615610b5857610b55600183611c89565b91505b80610b6281611ced565b915050610aee565b50919050565b6000602081905290815260409020805460018201546002830180546001600160a01b03909316939192610ba290611cb8565b80601f0160208091040260200160405190810160405280929190818152602001828054610bce90611cb8565b8015610c1b5780601f10610bf057610100808354040283529160200191610c1b565b820191906000526020600020905b815481529060010190602001808311610bfe57829003601f168201915b5050506003909301549192505060ff1684565b60606003805480602002602001604051908101604052809291908181526020018280548015610c8657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610c68575b5050505050905090565b6060600060055467ffffffffffffffff811115610caf57610caf611d34565b604051908082528060200260200182016040528015610cd8578160200160208202803683370190505b5090506000805b600554811015610d6f57858015610d08575060008181526020819052604090206003015460ff16155b80610d2c5750848015610d2c575060008181526020819052604090206003015460ff165b15610d5d5780838381518110610d4457610d44611d1e565b6020908102919091010152610d5a600183611c89565b91505b80610d6781611ced565b915050610cdf565b610d798888611ca1565b67ffffffffffffffff811115610d9157610d91611d34565b604051908082528060200260200182016040528015610dba578160200160208202803683370190505b5093508790505b86811015610e1d57828181518110610ddb57610ddb611d1e565b6020026020010151848983610df09190611ca1565b81518110610e0057610e00611d1e565b602090810291909101015280610e1581611ced565b915050610dc1565b505050949350505050565b60035460609060009067ffffffffffffffff811115610e4957610e49611d34565b604051908082528060200260200182016040528015610e72578160200160208202803683370190505b5090506000805b600354811015610f505760008581526001602052604081206003805491929184908110610ea857610ea8611d1e565b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff1615610f3e5760038181548110610ee857610ee8611d1e565b9060005260206000200160009054906101000a90046001600160a01b0316838381518110610f1857610f18611d1e565b6001600160a01b0390921660209283029190910190910152610f3b600183611c89565b91505b80610f4881611ced565b915050610e79565b8167ffffffffffffffff811115610f6957610f69611d34565b604051908082528060200260200182016040528015610f92578160200160208202803683370190505b509350600090505b81811015610ff857828181518110610fb457610fb4611d1e565b6020026020010151848281518110610fce57610fce611d1e565b6001600160a01b039092166020928302919091019091015280610ff081611ced565b915050610f9a565b505050919050565b33301461101f5760405162461bcd60e51b81526004016104f990611c25565b60035481603282118015906110345750818111155b801561103f57508015155b801561104a57508115155b6110665760405162461bcd60e51b81526004016104f990611b8a565b60048390556040518381527fa3f1ee9126a074d9326c682f561767f710e927faa811f7a99829d49dc421797a9060200160405180910390a1505050565b3360008181526002602052604090205460ff166110d25760405162461bcd60e51b81526004016104f990611c52565b60008281526020819052604090205482906001600160a01b03166111385760405162461bcd60e51b815260206004820152601a60248201527f5472616e73616374696f6e20646f6573206e6f7420657869737400000000000060448201526064016104f9565b60008381526001602090815260408083203380855292529091205484919060ff16156111b85760405162461bcd60e51b815260206004820152602960248201527f5472616e73616374696f6e20697320616c726561647920636f6e6669726d656460448201526810313c9037bbb732b960b91b60648201526084016104f9565b6000858152600160208181526040808420338086529252808420805460ff1916909317909255905187927f4a504a94899432a9846e1aa406dceb1bcfd538bb839071d49d1e5e23f5be30ef91a361120e8561142b565b5050505050565b6000611222848484611657565b905061122d816110a3565b9392505050565b3330146112535760405162461bcd60e51b81526004016104f990611c25565b6001600160a01b038216600090815260026020526040902054829060ff1661128d5760405162461bcd60e51b81526004016104f990611c52565b6001600160a01b038216600090815260026020526040902054829060ff16156112f35760405162461bcd60e51b8152602060048201526018602482015277546865206f776e657220616c72656164792065786973747360401b60448201526064016104f9565b60005b60035481101561139157846001600160a01b03166003828154811061131d5761131d611d1e565b6000918252602090912001546001600160a01b0316141561137f57836003828154811061134c5761134c611d1e565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550611391565b8061138981611ced565b9150506112f6565b506001600160a01b03808516600081815260026020526040808220805460ff1990811690915593871682528082208054909416600117909355915190917f8001553a916ef2f495d26a907cc54d96ed840d7bda71e73194bf5a9df7a76b9091a26040516001600160a01b038416907ff39e6e1eb0edcf53c221607b54b00cd28f3196fed0a24994dc308b8f611b682d90600090a250505050565b3360008181526002602052604090205460ff1661145a5760405162461bcd60e51b81526004016104f990611c52565b60008281526001602090815260408083203380855292529091205483919060ff166114975760405162461bcd60e51b81526004016104f990611be0565b600084815260208190526040902060030154849060ff16156114fb5760405162461bcd60e51b815260206004820181905260248201527f5472616e73616374696f6e2077617320616c726561647920657865637574656460448201526064016104f9565b61150485610a4e565b1561120e57600085815260208190526040902060038101805460ff191660019081179091558154908201546002830180546115e2936001600160a01b031692919061154e90611cb8565b905084600201805461155f90611cb8565b80601f016020809104026020016040519081016040528092919081815260200182805461158b90611cb8565b80156115d85780601f106115ad576101008083540402835291602001916115d8565b820191906000526020600020905b8154815290600101906020018083116115bb57829003601f168201915b5050505050611787565b156116175760405186907f33e13ecb54c3076d8e8bb8c2881800a4d972b792045ffae98fdf46df365fed7590600090a261164f565b60405186907f526441bb6c1aba3c9a4a6ca1d6545da9c2333c8c48343ef398eb858d72b7923690600090a260038101805460ff191690555b505050505050565b6000836001600160a01b0381166116aa5760405162461bcd60e51b8152602060048201526017602482015276416464726573732063616e6e6f7420626520656d70747960481b60448201526064016104f9565b600554604080516080810182526001600160a01b038881168252602080830189815283850189815260006060860181905287815280845295909520845181546001600160a01b0319169416939093178355516001830155925180519496509193909261171d92600285019291019061180f565b50606091909101516003909101805460ff1916911515919091179055600580546001919060009061174f908490611c89565b909155505060405182907fc0ba8fe4b176c1714197d43b9cc6bcf797a4a7461c5fe8d0ef6e184ae7601e5190600090a2509392505050565b6000806040516020840160008287838a8c6187965a03f198975050505050505050565b8280548282559060005260206000209081019282156117ff579160200282015b828111156117ff57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906117ca565b5061180b929150611883565b5090565b82805461181b90611cb8565b90600052602060002090601f01602090048101928261183d57600085556117ff565b82601f1061185657805160ff19168380011785556117ff565b828001600101855582156117ff579182015b828111156117ff578251825591602001919060010190611868565b5b8082111561180b5760008155600101611884565b80356001600160a01b03811681146118af57600080fd5b919050565b803580151581146118af57600080fd5b6000602082840312156118d657600080fd5b61122d82611898565b600080604083850312156118f257600080fd5b6118fb83611898565b915061190960208401611898565b90509250929050565b60008060006060848603121561192757600080fd5b61193084611898565b925060208401359150604084013567ffffffffffffffff8082111561195457600080fd5b818601915086601f83011261196857600080fd5b81358181111561197a5761197a611d34565b604051601f8201601f19908116603f011681019083821181831017156119a2576119a2611d34565b816040528281528960208487010111156119bb57600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b600080604083850312156119f057600080fd5b6119f9836118b4565b9150611909602084016118b4565b600060208284031215611a1957600080fd5b5035919050565b60008060408385031215611a3357600080fd5b8235915061190960208401611898565b60008060008060808587031215611a5957600080fd5b8435935060208501359250611a70604086016118b4565b9150611a7e606086016118b4565b905092959194509250565b60018060a01b038516815260006020858184015260806040840152845180608085015260005b81811015611acb5786810183015185820160a001528201611aaf565b81811115611add57600060a083870101525b50601f01601f1916830160a0019150611afc9050606083018415159052565b95945050505050565b6020808252825182820181905260009190848201906040850190845b81811015611b465783516001600160a01b031683529284019291840191600101611b21565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611b4657835183529284019291840191600101611b6e565b60208082526036908201527f52657175697265642076616c756520697320696e76616c696420666f72207468604082015275194818dd5c9c995b9d081bdddb995c9cc818dbdd5b9d60521b606082015260800190565b60208082526025908201527f5472616e73616374696f6e206973206e6f7420636f6e6669726d65642062792060408201526437bbb732b960d91b606082015260800190565b60208082526013908201527213db9b1e481dd85b1b195d08185b1b1bddd959606a1b604082015260600190565b60208082526018908201527f546865206f776e657220646f6573206e6f742065786973740000000000000000604082015260600190565b60008219821115611c9c57611c9c611d08565b500190565b600082821015611cb357611cb3611d08565b500390565b600181811c90821680611ccc57607f821691505b60208210811415610b6a57634e487b7160e01b600052602260045260246000fd5b6000600019821415611d0157611d01611d08565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212206218bf781dcbc620e8829bdebcbc6ce03bf4703a647141467643a6c8d5d3bc2364736f6c63430008060033",
  "devdoc": {
    "author": "Stefan George - <stefan.george@consensys.net>",
    "kind": "dev",
    "methods": {
      "addOwner(address)": {
        "details": "Allows to add a new owner. Transaction has to be sent by wallet.",
        "params": {
          "owner": "Address of new owner."
        }
      },
      "changeRequirement(uint256)": {
        "details": "Allows to change the number of required confirmations. Transaction has to be sent by wallet.",
        "params": {
          "_required": "Number of required confirmations."
        }
      },
      "confirmTransaction(uint256)": {
        "details": "Allows an owner to confirm a transaction.",
        "params": {
          "transactionId": "Transaction ID."
        }
      },
      "constructor": {
        "details": "Contract constructor sets initial owners and required number of confirmations.",
        "params": {
          "_owners": "List of initial owners.",
          "_required": "Number of required confirmations."
        }
      },
      "executeTransaction(uint256)": {
        "details": "Allows anyone to execute a confirmed transaction.",
        "params": {
          "transactionId": "Transaction ID."
        }
      },
      "getConfirmationCount(uint256)": {
        "details": "Returns number of confirmations of a transaction.",
        "params": {
          "transactionId": "Transaction ID."
        },
        "returns": {
          "count": "Number of confirmations."
        }
      },
      "getConfirmations(uint256)": {
        "details": "Returns array with owner addresses, which confirmed transaction.",
        "params": {
          "transactionId": "Transaction ID."
        },
        "returns": {
          "_confirmations": "Returns array of owner addresses."
        }
      },
      "getOwners()": {
        "details": "Returns list of owners.",
        "returns": {
          "_0": "List of owner addresses."
        }
      },
      "getTransactionCount(bool,bool)": {
        "details": "Returns total number of transactions after filers are applied.",
        "params": {
          "executed": "Include executed transactions.",
          "pending": "Include pending transactions."
        },
        "returns": {
          "count": "Total number of transactions after filters are applied."
        }
      },
      "getTransactionIds(uint256,uint256,bool,bool)": {
        "details": "Returns list of transaction IDs in defined range.",
        "params": {
          "executed": "Include executed transactions.",
          "from": "Index start position of transaction array.",
          "pending": "Include pending transactions.",
          "to": "Index end position of transaction array."
        },
        "returns": {
          "_transactionIds": "Returns array of transaction IDs."
        }
      },
      "isConfirmed(uint256)": {
        "details": "Returns the confirmation status of a transaction.",
        "params": {
          "transactionId": "Transaction ID."
        },
        "returns": {
          "result": "Confirmation status."
        }
      },
      "removeOwner(address)": {
        "details": "Allows to remove an owner. Transaction has to be sent by wallet.",
        "params": {
          "owner": "Address of owner."
        }
      },
      "replaceOwner(address,address)": {
        "details": "Allows to replace an owner with a new owner. Transaction has to be sent by wallet.",
        "params": {
          "newOwner": "Address of new owner.",
          "owner": "Address of owner to be replaced."
        }
      },
      "revokeConfirmation(uint256)": {
        "details": "Allows an owner to revoke a confirmation for a transaction.",
        "params": {
          "transactionId": "Transaction ID."
        }
      },
      "submitTransaction(address,uint256,bytes)": {
        "details": "Allows an owner to submit and confirm a transaction.",
        "params": {
          "data": "Transaction data payload.",
          "destination": "Transaction target address.",
          "value": "Transaction ether value."
        },
        "returns": {
          "transactionId": "Returns transaction ID."
        }
      }
    },
    "title": "Multisignature wallet - Allows multiple parties to agree on transactions before execution.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 52,
        "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
        "label": "transactions",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_uint256,t_struct(Transaction)78_storage)"
      },
      {
        "astId": 58,
        "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
        "label": "confirmations",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 62,
        "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
        "label": "isOwner",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 65,
        "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
        "label": "owners",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 67,
        "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
        "label": "required",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 69,
        "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
        "label": "transactionCount",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_uint256,t_struct(Transaction)78_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct MultiSigWallet.Transaction)",
        "numberOfBytes": "32",
        "value": "t_struct(Transaction)78_storage"
      },
      "t_struct(Transaction)78_storage": {
        "encoding": "inplace",
        "label": "struct MultiSigWallet.Transaction",
        "members": [
          {
            "astId": 71,
            "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
            "label": "destination",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 73,
            "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
            "label": "value",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 75,
            "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
            "label": "data",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes_storage"
          },
          {
            "astId": 77,
            "contract": "contracts/MultiSigWallet.sol:MultiSigWallet",
            "label": "executed",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}