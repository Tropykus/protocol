{
  "language": "Solidity",
  "sources": {
    "contracts/mocks/Discover.sol": {
      "content": "pragma solidity ^0.5.16;\n\ninterface IOracle {\n    function peek() external view returns (uint256, bool);\n\n    function getLastPublicationBlock() external view returns (uint256);\n}\n\ninterface IRoCState {\n    function getReserveTokenPrice() external view returns (uint256);\n\n    function getPriceProvider() external view returns (address);\n}\n\ncontract Discover {\n    address IRoCState_addr;\n\n    constructor() public {\n        IRoCState_addr = 0x9d4b2c05818A0086e641437fcb64ab6098c7BbEc;\n    }\n\n    function getOracle() public view returns (address oracle) {\n        oracle = IRoCState(IRoCState_addr).getPriceProvider();\n    }\n}\n"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}