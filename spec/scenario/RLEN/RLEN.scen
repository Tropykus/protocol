
Test "Check Name"
    TROP Deploy Geoff
    Assert Equal (TROP Name) "tropyco"

Test "Check Symbol"
    TROP Deploy Geoff
    Assert Equal (TROP Symbol) "TROP"

Test "Check Decimals"
    TROP Deploy Geoff
    Assert Equal (TROP Decimals) 18

Test "Check Total Supply"
    TROP Deploy Geoff
    Assert Equal (TROP TotalSupply) 10000000e18

Test "Check account receives Total Supply after deploy and emits Transfer event"
    TROP Deploy Geoff
    Assert Equal (TROP TokenBalance Geoff) 10000000e18
    Assert Log Transfer (from (Address Zero)) (to (Address Geoff)) (amount "10000000000000000000000000")

Test "Check approve sets correct approval and emits Approval event"
    TROP Deploy Geoff
    From Geoff (TROP Approve Jared 10)
    Assert Equal (TROP Allowance Geoff Jared) 10
    Assert Log Approval (owner (Address Geoff)) (spender (Address Jared)) (amount "10")

Test "Check approve with bad allowance reverts"
    TROP Deploy Geoff
    AllowFailures
    From Geoff (TROP Approve Jared 1e70)
    Assert Revert "revert TROP::approve: amount exceeds 96 bits"

Test "Check transfer updates balances correctly, emits Transfer event, and returns true"
    TROP Deploy Geoff
    From Geoff (TROP Transfer Jared 10)
    Assert Equal (TROP TokenBalance Geoff) 9999999999999999999999990
    Assert Equal (TROP TokenBalance Jared) 10
    Assert Log Transfer (from (Address Geoff)) (to (Address Jared)) (amount "10")

Test "Check self-transfer updates balances correctly, emits Transfer event, and returns true"
    TROP Deploy Geoff
    Expect Changes (TROP VotesLength Geoff) Zero
    Expect Changes (TROP TokenBalance Geoff) Zero
    From Geoff (TROP Transfer Geoff 10)
    Assert Log Transfer (from (Address Geoff)) (to (Address Geoff)) (amount "10")
    Expect Changes (TROP VotesLength Geoff) Zero
    Expect Changes (TROP TokenBalance Geoff) Zero
    From Geoff (TROP Transfer Geoff 0)
    Assert Log Transfer (from (Address Geoff)) (to (Address Geoff)) (amount "0")

Test "Check transferFrom with unlimited allowance updates balances correctly, emits Transfer event, and returns true"
    TROP Deploy Geoff
    From Geoff (TROP Approve Jared UInt256Max)
    From Jared (TROP TransferFrom Geoff Jared 10)
    Assert Equal (TROP TokenBalance Geoff) 9999999999999999999999990
    Assert Equal (TROP TokenBalance Jared) 10
    Assert Equal (TROP Allowance Geoff Jared) UInt96Max
    Assert Log Transfer (from (Address Geoff)) (to (Address Jared)) (amount "10")

Test "Check transferFrom with unlimited allowance updates balances correctly, emits Transfer event, and returns true"
    TROP Deploy Geoff
    From Geoff (TROP Approve Jared UInt96Max)
    From Jared (TROP TransferFrom Geoff Jared 10)
    Assert Equal (TROP TokenBalance Geoff) 9999999999999999999999990
    Assert Equal (TROP TokenBalance Jared) 10
    Assert Equal (TROP Allowance Geoff Jared) UInt96Max
    Assert Log Transfer (from (Address Geoff)) (to (Address Jared)) (amount "10")

Test "Check transferFrom with allowance updates balances correctly, emits Transfer event, and returns true"
    TROP Deploy Geoff
    From Geoff (TROP Approve Jared 10)
    From Jared (TROP TransferFrom Geoff Jared 9)
    Assert Equal (TROP TokenBalance Geoff) 9999999999999999999999991
    Assert Equal (TROP TokenBalance Jared) 9
    Assert Equal (TROP Allowance Geoff Jared) 1
    Assert Log Transfer (from (Address Geoff)) (to (Address Jared)) (amount "9")
    Assert Log Approval (owner (Address Geoff)) (spender (Address Jared)) (amount "1")

Test "Check transferFrom reverts with not sufficient allowance"
    TROP Deploy Geoff
    From Geoff (TROP Approve Jared 10)
    AllowFailures
    From Jared (TROP TransferFrom Geoff Jared 11)
    Assert Revert "revert TROP::transferFrom: transfer amount exceeds spender allowance"

Test "Check transfer reverts when transferring too much"
    TROP Deploy Geoff
    AllowFailures
    From Geoff (TROP Transfer Jared 10000001e18)
    Assert Revert "revert TROP::_transferTokens: transfer amount exceeds balance"

Test "Check transfer reverts when transferring to address 0"
    TROP Deploy Geoff
    AllowFailures
    From Geoff (TROP Transfer (Address Zero) 10000000e18)
    Assert Revert "revert TROP::_transferTokens: cannot transfer to the zero address"

Test "Delegate with zero balance doesn't change votes checkpoints"
    TROP Deploy Geoff
    Assert Equal (TROP VotesLength Geoff) 0
    From Jared (TROP Delegate Geoff)
    Assert Equal (TROP VotesLength Geoff) 0
    Assert Log DelegateChanged (delegator (Address Jared)) (fromDelegate (Address Zero)) (toDelegate (Address Geoff))

Test "Delegate from address(0) to account with zero checkpoints"
    TROP Deploy Geoff
    From Geoff (TROP Transfer Jared 10)
    Assert Equal (TROP VotesLength Geoff) 0
    From Jared (TROP Delegate Geoff)
    Assert Equal (TROP VotesLength Geoff) 1
    Assert Equal (TROP GetCurrentVotes Geoff) 10
    Assert Equal (TROP GetCurrentVotesBlock Geoff) LastBlock
    Assert Equal (TROP VotesLength Zero) 0
    Assert Log DelegateChanged (delegator (Address Jared)) (fromDelegate (Address Zero)) (toDelegate (Address Geoff))
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "0") (newBalance "10")

Test "Delegate from address(0) to account with existing checkpoints"
    TROP Deploy Geoff
    From Geoff (TROP Transfer Jared 10)
    From Geoff (TROP Transfer Torrey 14)
    Assert Equal (TROP VotesLength Geoff) 0
    From Jared (TROP Delegate Geoff)
    Assert Equal (TROP VotesLength Geoff) 1
    Assert Equal (TROP GetCurrentVotes Geoff) 10
    Assert Equal (TROP GetCurrentVotesBlock Geoff) LastBlock
    Assert Log DelegateChanged (delegator (Address Jared)) (fromDelegate (Address Zero)) (toDelegate (Address Geoff))
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "0") (newBalance "10")
    From Torrey (TROP Delegate Geoff)
    Assert Equal (TROP VotesLength Geoff) 2
    Assert Equal (TROP GetCurrentVotes Geoff) 24
    Assert Equal (TROP GetCurrentVotesBlock Geoff) LastBlock
    Assert Equal (TROP VotesLength Zero) 0
    Assert Log DelegateChanged (delegator (Address Torrey)) (fromDelegate (Address Zero)) (toDelegate (Address Geoff))
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "10") (newBalance "24")

Test "Delegate to address(0)"
    TROP Deploy Geoff
    From Geoff (TROP Transfer Jared 10)
    From Geoff (TROP Transfer Torrey 14)
    Assert Equal (TROP VotesLength Geoff) 0
    From Jared (TROP Delegate Geoff)
    Assert Equal (TROP VotesLength Geoff) 1
    Assert Equal (TROP GetCurrentVotes Geoff) 10
    Assert Equal (TROP GetCurrentVotesBlock Geoff) LastBlock
    Assert Log DelegateChanged (delegator (Address Jared)) (fromDelegate (Address Zero)) (toDelegate (Address Geoff))
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "0") (newBalance "10")
    From Torrey (TROP Delegate Geoff)
    Assert Equal (TROP VotesLength Geoff) 2
    Assert Equal (TROP GetCurrentVotes Geoff) 24
    Assert Equal (TROP GetCurrentVotesBlock Geoff) LastBlock
    Assert Log DelegateChanged (delegator (Address Torrey)) (fromDelegate (Address Zero)) (toDelegate (Address Geoff))
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "10") (newBalance "24")
    From Torrey (TROP Delegate Zero)
    Assert Equal (TROP VotesLength Geoff) 3
    Assert Equal (TROP GetCurrentVotes Geoff) 10
    Assert Equal (TROP GetCurrentVotesBlock Geoff) LastBlock
    Assert Log DelegateChanged (delegator (Address Torrey)) (fromDelegate (Address Geoff)) (toDelegate (Address Zero))
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "24") (newBalance "10")
    Assert Equal (TROP VotesLength Zero) 0

Test "Delegate from one account to another account with zero checkpoints"
    TROP Deploy Geoff
    From Geoff (TROP Transfer Jared 10)
    From Geoff (TROP Transfer Torrey 14)
    Assert Equal (TROP VotesLength Geoff) 0
    From Jared (TROP Delegate Geoff)
    Assert Equal (TROP VotesLength Geoff) 1
    Assert Equal (TROP GetCurrentVotes Geoff) 10
    Assert Equal (TROP GetCurrentVotesBlock Geoff) LastBlock
    Assert Log DelegateChanged (delegator (Address Jared)) (fromDelegate (Address Zero)) (toDelegate (Address Geoff))
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "0") (newBalance "10")
    From Torrey (TROP Delegate Geoff)
    Assert Equal (TROP VotesLength Geoff) 2
    Assert Equal (TROP GetCurrentVotes Geoff) 24
    Assert Equal (TROP GetCurrentVotesBlock Geoff) LastBlock
    Assert Equal (TROP VotesLength Coburn) 0
    Assert Log DelegateChanged (delegator (Address Torrey)) (fromDelegate (Address Zero)) (toDelegate (Address Geoff))
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "10") (newBalance "24")
    From Torrey (TROP Delegate Coburn)
    Assert Equal (TROP VotesLength Coburn) 1
    Assert Equal (TROP GetCurrentVotes Coburn) 14
    Assert Equal (TROP GetCurrentVotesBlock Coburn) LastBlock
    Assert Equal (TROP VotesLength Geoff) 3
    Assert Equal (TROP GetCurrentVotes Geoff) 10
    Assert Equal (TROP GetCurrentVotesBlock Geoff) LastBlock
    Assert Log DelegateChanged (delegator (Address Torrey)) (fromDelegate (Address Geoff)) (toDelegate (Address Coburn))
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "24") (newBalance "10")
    Assert Log DelegateVotesChanged (delegate (Address Coburn)) (previousBalance "0") (newBalance "14")

Test "Delegate from one account to another account with multiple checkpoints"
    TROP Deploy Geoff
    From Geoff (TROP Transfer Jared 10)
    From Geoff (TROP Transfer Torrey 14)
    From Geoff (TROP Transfer Coburn 2)
    Assert Equal (TROP VotesLength Geoff) 0
    From Jared (TROP Delegate Geoff)
    Assert Equal (TROP VotesLength Geoff) 1
    Assert Equal (TROP GetCurrentVotes Geoff) 10
    Assert Equal (TROP GetCurrentVotesBlock Geoff) LastBlock
    Assert Log DelegateChanged (delegator (Address Jared)) (fromDelegate (Address Zero)) (toDelegate (Address Geoff))
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "0") (newBalance "10")
    From Torrey (TROP Delegate Geoff)
    Assert Equal (TROP VotesLength Geoff) 2
    Assert Equal (TROP GetCurrentVotes Geoff) 24
    Assert Equal (TROP GetCurrentVotesBlock Geoff) LastBlock
    Assert Equal (TROP VotesLength Coburn) 0
    Assert Log DelegateChanged (delegator (Address Torrey)) (fromDelegate (Address Zero)) (toDelegate (Address Geoff))
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "10") (newBalance "24")
    From Coburn (TROP Delegate Coburn)
    Assert Equal (TROP VotesLength Coburn) 1
    Assert Equal (TROP GetCurrentVotes Coburn) 2
    Assert Equal (TROP GetCurrentVotesBlock Coburn) LastBlock
    Assert Log DelegateChanged (delegator (Address Coburn)) (fromDelegate (Address Zero)) (toDelegate (Address Coburn))
    Assert Log DelegateVotesChanged (delegate (Address Coburn)) (previousBalance "0") (newBalance "2")
    From Torrey (TROP Delegate Coburn)
    Assert Equal (TROP VotesLength Coburn) 2
    Assert Equal (TROP GetCurrentVotes Coburn) 16
    Assert Equal (TROP GetCurrentVotesBlock Coburn) LastBlock
    Assert Equal (TROP VotesLength Geoff) 3
    Assert Equal (TROP GetCurrentVotes Geoff) 10
    Assert Equal (TROP GetCurrentVotesBlock Geoff) LastBlock
    Assert Log DelegateChanged (delegator (Address Torrey)) (fromDelegate (Address Geoff)) (toDelegate (Address Coburn))
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "24") (newBalance "10")
    Assert Log DelegateVotesChanged (delegate (Address Coburn)) (previousBalance "2") (newBalance "16")

Test "Vote checkpoints don't change on transfer when to and from accounts delegate to same account"
    TROP Deploy Geoff
    From Geoff (TROP Transfer Jared 10)
    From Geoff (TROP Transfer Torrey 14)
    Assert Equal (TROP VotesLength Geoff) 0
    From Jared (TROP Delegate Geoff)
    Assert Equal (TROP VotesLength Geoff) 1
    Assert Equal (TROP GetCurrentVotes Geoff) 10
    Assert Equal (TROP GetCurrentVotesBlock Geoff) LastBlock
    Assert Log DelegateChanged (delegator (Address Jared)) (fromDelegate (Address Zero)) (toDelegate (Address Geoff))
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "0") (newBalance "10")
    From Torrey (TROP Delegate Geoff)
    Assert Equal (TROP VotesLength Geoff) 2
    Assert Equal (TROP GetCurrentVotes Geoff) 24
    Assert Equal (TROP GetCurrentVotesBlock Geoff) LastBlock
    Assert Log DelegateChanged (delegator (Address Torrey)) (fromDelegate (Address Zero)) (toDelegate (Address Geoff))
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "10") (newBalance "24")
    Invariant Static (TROP VotesLength Geoff)
    Invariant Static (TROP GetCurrentVotes Geoff)
    Invariant Static (TROP GetCurrentVotesBlock Geoff)
    From Torrey (TROP Transfer Jared 14)

Test "Only one checkpoint is added per block for multiple increased balance updates"
    TROP Deploy Scenario Geoff
    Assert Equal (TROP VotesLength Geoff) 0
    Assert Equal (TROP GetCurrentVotes Geoff) 0
    From Jared (TROP Delegate Geoff)
    Assert Log DelegateChanged (delegator (Address Jared)) (fromDelegate (Address Zero)) (toDelegate (Address Geoff))
    From Torrey (TROP Delegate Geoff)
    Assert Log DelegateChanged (delegator (Address Torrey)) (fromDelegate (Address Zero)) (toDelegate (Address Geoff))
    From Geoff (TROP TransferScenario (Jared Torrey) 10)
    Assert Equal (TROP VotesLength Geoff) 1
    Assert Equal (TROP GetCurrentVotes Geoff) 20
    Assert Equal (TROP GetCurrentVotesBlock Geoff) LastBlock
    Assert Equal (TROP VotesLength Zero) 0
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "0") (newBalance "10")
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "10") (newBalance "20")

Test "Only one checkpoint is added per block for multiple decreased balance updates"
    TROP Deploy Scenario Geoff
    From Geoff (TROP Transfer Jared 10)
    From Geoff (TROP Transfer Torrey 10)
    Assert Equal (TROP VotesLength Geoff) 0
    Assert Equal (TROP GetCurrentVotes Geoff) 0
    From Jared (TROP Delegate Geoff)
    Assert Equal (TROP VotesLength Geoff) 1
    Assert Equal (TROP GetCurrentVotes Geoff) 10
    Assert Equal (TROP GetCurrentVotesBlock Geoff) LastBlock
    Assert Log DelegateChanged (delegator (Address Jared)) (fromDelegate (Address Zero)) (toDelegate (Address Geoff))
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "0") (newBalance "10")
    From Torrey (TROP Delegate Geoff)
    Assert Equal (TROP VotesLength Geoff) 2
    Assert Equal (TROP GetCurrentVotes Geoff) 20
    Assert Equal (TROP GetCurrentVotesBlock Geoff) LastBlock
    Assert Log DelegateChanged (delegator (Address Torrey)) (fromDelegate (Address Zero)) (toDelegate (Address Geoff))
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "10") (newBalance "20")
    From Jared (TROP Approve Geoff 10)
    From Torrey (TROP Approve Geoff 10)
    From Geoff (TROP TransferFromScenario (Jared Torrey) 10)
    Assert Equal (TROP VotesLength Geoff) 3
    Assert Equal (TROP GetCurrentVotes Geoff) 0
    Assert Equal (TROP GetCurrentVotesBlock Geoff) LastBlock
    Assert Equal (TROP VotesLength Zero) 0
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "20") (newBalance "10")
    Assert Log DelegateVotesChanged (delegate (Address Geoff)) (previousBalance "10") (newBalance "0")

Test "Check transfer reverts when block number exceeds 32 bits"
    TROP Deploy Geoff
    From Jared (TROP Delegate Geoff)
    AllowFailures
    SetBlockNumber 5000000000
    From Geoff (TROP Transfer Jared 10000000e18)
    Assert Revert "revert TROP::_writeCheckpoint: block number exceeds 32 bits"
